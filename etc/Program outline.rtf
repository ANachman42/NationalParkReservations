{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww16720\viewh13020\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 CLI calls on JDBCParkDAO for getAllParks()\
\
JDBCParkDAO getAllParks() returns a List of Parks (sorted alphabetically)\
\
CLI gets that List and gives it to Menu\
\
Menu displays the List, and interprets user input.\
\
User selects a park \'97> \
\
CLI calls on JDBCParkDAO for getParkInfo(park_id)\
\
JDBCParkDAO runs getParkInfo(park_id) and returns Park Object\
\
CLI/Menu interpret and display the values in the Park Object\
\
CLI calls Campground Menu and JDBCCampgroundDAO getCampgroundList()~\
\
What do we need to get Park display functionality?\
\
Classes:\
1) Functional CLI\
2) Functional Menu\
3) Park POJO\
4) ParkDAO interface\
5) JDBCParkDAO\
\
CLI\
1) Hold a List of Park POJO\
2) Pass Park List to Menu\
3) Accept user input (pass to Menu)\
\
Menu\
1) Display Park List w/ numbers (reads park names (String))\
2) Have Q for quit\
3) Able to select a park (and verify valid input)\
\
Park\
1) Has properties and getters/setters\
\
ParkDAO\
1) Define methods\
a) getParkList (list of Park Objects)\
b) getParkInfo\
\
JDBCParkDAO\
1) Implement the methods\
a) probably has to talk to the database\
\
Who does what?\
Al:\
\
\
Tyler:\
\
LinkedHashMap<key, value>\
For Parks, key = ParkName\
\
Map<String, Park> parkList = new LinkedHashMap<String, Park>();\
\
parkList.put(park.getName(), park);\
\

\b How to Reservation
\b0 \
\
After user selects CAMPGROUND\
\
Need all CAMPSITES in that CAMPGROUND\
\
SELECT site.site_id, reservation.from_date, reservation.to_date\
FROM site\
JOIN reservation\
ON site.site_id = reservation.site_id;\
\
This provides list of all reservations in that CAMPGROUND (via campsites)\
\
In Java:\
\
*Iterate over list of reservations\
*If new reservation is invalid, move on (break at first invalid)\
*If new reservation is valid, add that campsite to a List or Map\
*Once List/Map is Size 5, stop iterating and return the list\
}